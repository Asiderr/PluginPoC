# The purpose of this Dockerfile is to test the script that installs the
# necessary packages for the Ubuntu development environment
# RUN it from the root of the project directory
# We need to be sure that both env script and cmake are working, so use
# --no-cache to force the commands to run every time
# DOCKER_BUILDKIT=1 docker build --no-cache --file docker/Dockerfile-ubuntu-devenv --output out .

FROM ubuntu:24.04 AS builder

USER root

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

# Copy project files
COPY . /usr/local/src/board-health-monitor
WORKDIR /usr/local/src/board-health-monitor

# Use the script to install the necessary packages
RUN ./scripts/devenv/devenv-install-ubuntu.sh

############### G++ ###############
RUN export CXX=g++

# Clean the project directory
RUN rm -rf build
RUN rm -rf build_debug
RUN rm -rf bin
RUN rm -rf bin-debug

# BUILD The project in Release mode
RUN mkdir -p ./build
WORKDIR /usr/local/src/board-health-monitor/build

RUN cmake -DCMAKE_BUILD_TYPE=Release ..
RUN make

# Test If the project builds successfully
WORKDIR /usr/local/src/board-health-monitor/
RUN stat ./bin/data-provider-battery.out
RUN stat ./bin/data-provider-disk.out
RUN stat ./bin/daemon.out
RUN stat ./bin/health-monitor.out

# Build The project in Debug mode
WORKDIR /usr/local/src/board-health-monitor/
RUN mkdir -p ./build_debug
WORKDIR /usr/local/src/board-health-monitor/build_debug

RUN cmake -DCMAKE_BUILD_TYPE=Debug ..
RUN make

# Test If the project builds successfully
WORKDIR /usr/local/src/board-health-monitor/
RUN stat ./bin-debug/data-provider-battery.out
RUN stat ./bin-debug/data-provider-disk.out
RUN stat ./bin-debug/daemon.out
RUN stat ./bin-debug/health-monitor.out

#############################################
############### clang++ ###############

RUN export CXX=clang++

# Clean the project directory
RUN rm -rf build
RUN rm -rf build_debug
RUN rm -rf bin

# BUILD The project in Release mode
RUN mkdir -p ./build
WORKDIR /usr/local/src/board-health-monitor/build

RUN cmake -DCMAKE_BUILD_TYPE=Release ..
RUN make

# Test If the project builds successfully
WORKDIR /usr/local/src/board-health-monitor/
RUN stat ./bin/data-provider-battery.out
RUN stat ./bin/data-provider-disk.out
RUN stat ./bin/daemon.out
RUN stat ./bin/health-monitor.out

# Build The project in Debug mode
WORKDIR /usr/local/src/board-health-monitor/
RUN mkdir -p ./build_debug
WORKDIR /usr/local/src/board-health-monitor/build_debug

RUN cmake -DCMAKE_BUILD_TYPE=Debug ..
RUN make

# Test If the project builds successfully
WORKDIR /usr/local/src/board-health-monitor/
RUN stat ./bin-debug/data-provider-battery.out
RUN stat ./bin-debug/data-provider-disk.out
RUN stat ./bin-debug/daemon.out
RUN stat ./bin-debug/health-monitor.out

FROM scratch AS export-artifacts
COPY --from=builder /usr/local/src/board-health-monitor/bin-debug/ bin-debug/
COPY --from=builder /usr/local/src/board-health-monitor/bin/ bin/
COPY --from=builder /usr/local/src/board-health-monitor/build/compile_commands.json build/compile_commands.json
